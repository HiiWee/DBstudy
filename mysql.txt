* 삭제한 테이블을 참조하는 테이블이 있다면 
  삭제하고자 하는 테이블을 참조하는 외래키 제약조건을 먼저 삭제해야함

*Like = 문자열을 이용하는 조건에서만 사용가능

* Null 값을 비교하는데는 무조건 is null, is not null만 사용가능 일반 연산자 안됨

* 집계 함수 (count, max, min, sum, avg)
	-널인 속성 값은 제외하고 계산
	+where절에서 사용할 수 없고 select, having절에서만 사용가능
	-SUM(), AVG()는 숫자자료형데이터만 사용가능 나머지는 모든 자료형 데이터 사용가능

* 튜플의 개수를 정확히 계산하기 위해 * 표시 사용

* order by
	- 오름차순 속성명 asc[default설정임]
	- 내림차순 속성명 desc

* group by
	-having 절 사용 (그룹에 대한 조건을 지정)
	+그룹을 나누는 기준이 되는 속성은 select 절에도 작성 권장
	+집계함수나 group by 절에 있는 속성외의 속성은 select절에 사용할 수 없다.
>> having, where의 차이
	having : 그룹을 나타내는 결과 행에만 적용
	where : 개별행 적용

* 조인검색
	-속성이름은 같아도 되나 도메인이 반드시 같아야함 (그래서 외래키를 조인속성으로 많이 사용)
	-where절에 조인속성의 값이 같아야함을 의미하는 조인 조건을 제시
	-조인검색 사용시 테이블이름.테이블속성 이렇게 검색하는것 권장
	-단순별명 사용가능

* 부속 질의문(서브질의문)
	-일반 select문은 주 질의문(메인질의문) 이라함
	-괄호로 묶어 사용
	+order by 절 사용 불가
	-단일행, 다중행 부속 질의문 으로 나뉨
	+단일행 부속 질의문은 일반 연산자, 다중 행 연산자 사용가능
	+다중행 부속 질의문은 다중 행 연산자만 사용가능
	+일반연산자 : =, !=, >, <, <=, >=
	+다중 행 연산자 : IN, NOT IN, EXISTS, NOT EXISTS, ALL, ANY(SOME)
	+EXISTS 사용시 만약 두개의 테이블을 사용하면 조인조건을 부속질의문의 where절에 작성해야함

* insert into 테이블명 values (삽입연산)
	-속성값 생략시 지정한 속성 순서대로 삽입

* insert, update, delete 모두 부속질의문 포함 가능

* create view(뷰생성)
	- as select문은 생성하고자 하는 뷰의 정의를 담음
	+ order by 를 사용할 수 없는것 제외하고 일반 select와 동일
	- with check option은 생성 뷰의 삼입, 수정 연산할 때 select문에서 제시한
	  뷰의 정의 조건을 위반하면 수행되지 않도록 하는 제약조건
	+ 집계함수를 사용하여 as select문 작성시 create view에서 속성 이름을 생략할 수 없다

* 뷰의 중요한 특성
	- 뷰에 대한 select문은 내부적으로 기본 테이블에 대한 select 문으로 변환되어 수행됨
	- 뷰에 대한 삽입, 수정, 삭제 연산도 기본 테이블에 수행되므로 결과적으로 기본 테이블이 변한다.

* 변경이 불가능한 뷰의 중요한 특성
	-기본테이블의 기본키를 구성하는 속성이 포함되어있지 않은 뷰는 변경불가
	-distinct 키워드를 포함하여 정의한 뷰는 변경 불가
	-group by 절을 포함하여 정의한 뷰는 변경 불가
	-여러개의 테이블을 조인하여 정의한 뷰는 변경할 수 없는 경우가 많음

* 뷰의 장점
	-질의문을 좀 더 쉽게 작성할 수 있다.
	-데이터의 보안 유지에 도움이 된다.
	-데이터를 좀 더 편리하게 관리할 수 있다.


* 페이징 처리
-- MySQL ROWNUM 이용한 페이징 처리
select r2.*  from (select @rownum:=@rownum+1 rownum, notice.* from notice, (select @rownum:=0) r) r2
where r2.rownum between 1 and 10;